<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
namespace <#= this.mvcProject.Name #>.Models
{
	using Microsoft.EntityFrameworkCore;

	public class <#=this.mvcProject.DbContextName#> : DbContext
	{
		public <#=this.mvcProject.DbContextName#>(DbContextOptions<<#=this.mvcProject.DbContextName#>> options)
			: base(options)
		{
		}<#

foreach(Tuple<string, string> nameAndPlural in typesNamesAndPlurals) {
	#>


		public DbSet<<#= nameAndPlural.Item1 #>> <#= nameAndPlural.Item2 #> { get; set; }<# 
}
 
if (this.onModelCreatingBlock) {
	#>


		protected override void OnModelCreating(ModelBuilder modelBuilder) {
<#	foreach (var complexKey in this.complexKeys) {
#>

			modelBuilder.Entity<<#=complexKey.Key#>>()
				.HasKey(c => new { <#=string.Join(", ", complexKey.Value.Select(s => "c." + s).ToArray())#> });
<#
	}
	foreach (var relationship in this.relationships) {
#>


			modelBuilder.Entity<<#=relationship.SourceTypeName#>>()
		        .Has<#=relationship.TargetMemberMultiplicity.Name#>(<#=relationship.TargetNavigationalPropertyExpressionString#>)
		        .With<#=relationship.SourceMemberMultiplicity.Name#>(<#=relationship.SourceNavigationalPropertyExpressionString#>)
                .IsRequired(<#=relationship.TargetMemberMultiplicity.IsObligatoryString#>)
                .OnDelete(DeleteBehavior.<#=relationship.DeleteBehavior#>);

<#
	}
	foreach (var command in this.customModelBuilderCommands)
	{
#>
			<#=command#>
<#                     
	}
}
#>

		}
	}
}